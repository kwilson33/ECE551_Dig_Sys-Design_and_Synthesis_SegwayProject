UART baud rate changed to 9600 with 50 MHz clock

Functionality
-------------
-Digital Core is exercise 21
-Digital Core will request A2D readings in round robin fashion. One reading 
	will be requested every update from the
	inertial sensor
	
Inertial Sensor
---------------
-Inertial Sensor is configured and read via a SPI interface, reads/writes
	only take single 16-bit transaction
-First 8 bits, looks at MOSI to see what reg is being read/written. MSB
	is R/W bit and next 7 bits = address of reg
- Read: the data at specified reg   returned as MISO during the 2nd 8 bits of the transaction
- Write: second 8 bits specify data being written, first 8 bits specifiy the address of reg being written to 
- Active high interrupt INT --> nrw data is ready. Double flop INT

What is done
------------
-Auth_blck
-UART (change baud rate)
-probably SPI
-A2D Interface
-Inertial integrator
-Balance control
-Steer_en, with some adjustments, 


What to do
------------
-piezo driver, not an in class exercise
	-warnings to people in vicinity (norm_mode, every 2 seconds)
	-warn rider too fast (ovr_spd,alarming)
	-battery low warnings (threshold is 0x800), able to occur same time as too fast warning
	-range = 300 Hz --> 7 kHz 
-figure out sending signals to steer_en block like 'sum_gt_min'
-synthesis
-flesh out Segway.via
-flesh out SegwayModel.svs
-optional Segway_tb.v	
	
Questions
--------------
-Is the SPI any different? The diagram has a few different things
	-5'b11000 vs 5'b10111 in exercise