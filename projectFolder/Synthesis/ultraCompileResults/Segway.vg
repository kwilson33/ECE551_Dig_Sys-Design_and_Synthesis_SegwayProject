/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Ultra(TM) in wire load mode
// Version   : N-2017.09-SP5
// Date      : Sun Dec  9 14:44:59 2018
/////////////////////////////////////////////////////////////


module Segway ( clk, RST_n, LED, INERT_SS_n, INERT_MOSI, INERT_SCLK, 
        INERT_MISO, A2D_SS_n, A2D_MOSI, A2D_SCLK, A2D_MISO, PWM_rev_rght, 
        PWM_frwrd_rght, PWM_rev_lft, PWM_frwrd_lft, piezo_n, piezo, INT, RX );
  output [7:0] LED;
  input clk, RST_n, INERT_MISO, A2D_MISO, INT, RX;
  output INERT_SS_n, INERT_MOSI, INERT_SCLK, A2D_SS_n, A2D_MOSI, A2D_SCLK,
         PWM_rev_rght, PWM_frwrd_rght, PWM_rev_lft, PWM_frwrd_lft, piezo_n,
         piezo;
  wire   n17, n18, batt_low, rst_n, rider_off, pwr_up, vld, lft_rev, rght_rev,
         en_steer, ovr_spd, n9, n10, n11, n12, n13, n16;
  wire   [11:0] batt;
  wire   [15:0] ptch;
  wire   [11:0] ld_cell_diff;
  wire   [10:0] lft_spd;
  wire   [10:0] rght_spd;
  wire   [11:0] lft_ld;
  wire   [11:0] rght_ld;
  wire   SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1, 
        SYNOPSYS_UNCONNECTED__2;

  Auth_blk Auth_block ( .clk(clk), .rst_n(rst_n), .rider_off(rider_off), 
        .pwr_up(pwr_up), .RX(RX) );
  inert_intf Inertial_Interface ( .clk(clk), .rst_n(rst_n), .vld(vld), .ptch(
        ptch), .SS_n(INERT_SS_n), .SCLK(INERT_SCLK), .MOSI(INERT_MOSI), .MISO(
        INERT_MISO), .INT(INT) );
  balance_cntrl_fast_sim1 balance_control ( .clk(clk), .rst_n(rst_n), .vld(n16), .ptch(ptch), .ld_cell_diff({ld_cell_diff[11:3], 1'b0, 1'b0, 1'b0}), 
        .lft_spd(lft_spd), .lft_rev(lft_rev), .rght_spd(rght_spd), .rght_rev(
        rght_rev), .rider_off(rider_off), .en_steer(en_steer), .pwr_up(pwr_up), 
        .ovr_spd(ovr_spd) );
  steer_en_fast_sim1 steer_enable ( .clk(clk), .rst_n(rst_n), .lft_ld(lft_ld), 
        .rght_ld(rght_ld), .ld_cell_diff({ld_cell_diff[11:3], 
        SYNOPSYS_UNCONNECTED__0, SYNOPSYS_UNCONNECTED__1, 
        SYNOPSYS_UNCONNECTED__2}), .en_steer(en_steer), .rider_off(rider_off)
         );
  mtr_drv motor_drive ( .PWM_rev_lft(PWM_rev_lft), .PWM_frwrd_lft(n18), 
        .PWM_rev_rght(PWM_rev_rght), .PWM_frwrd_rght(n17), .clk(clk), .rst_n(
        rst_n), .lft_spd(lft_spd), .lft_rev(lft_rev), .rght_spd(rght_spd), 
        .rght_rev(rght_rev) );
  A2D_Intf A2D_interface ( .clk(clk), .rst_n(rst_n), .nxt(n16), .lft_ld(lft_ld), .rght_ld(rght_ld), .batt(batt), .SS_n_A2D(A2D_SS_n), .SCLK_A2D(A2D_SCLK), 
        .MOSI_A2D(A2D_MOSI), .MISO_A2D(A2D_MISO) );
  piezo pepperoni_piezo ( .clk(clk), .rst_n(rst_n), .norm_mode(en_steer), 
        .ovr_spd(ovr_spd), .batt_low(batt_low), .piezo(piezo), .piezo_n(
        piezo_n) );
  rst_synch iRST ( .RST_n(RST_n), .clk(clk), .rst_n(rst_n) );
  AN3D0BWP U7 ( .A1(n13), .A2(n12), .A3(n11), .Z(batt_low) );
  CKBD1BWP U9 ( .I(vld), .Z(n16) );
  CKND16BWP U10 ( .I(n10), .ZN(PWM_frwrd_rght) );
  INVD2BWP U11 ( .I(n17), .ZN(n10) );
  CKND16BWP U12 ( .I(n9), .ZN(PWM_frwrd_lft) );
  INVD2BWP U13 ( .I(n18), .ZN(n9) );
  NR4D0BWP U14 ( .A1(batt[10]), .A2(batt[1]), .A3(batt[11]), .A4(batt[4]), 
        .ZN(n13) );
  NR4D0BWP U15 ( .A1(batt[0]), .A2(batt[5]), .A3(batt[9]), .A4(batt[3]), .ZN(
        n12) );
  NR4D0BWP U16 ( .A1(batt[2]), .A2(batt[6]), .A3(batt[8]), .A4(batt[7]), .ZN(
        n11) );
endmodule

